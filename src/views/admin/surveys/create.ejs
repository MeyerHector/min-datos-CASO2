<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Formulario de satisfaccion</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/css/form.css" />
  </head>

  <body>
    <main class="mx-auto my-5 col-sm-8 col-md-7">

      <form id="formComplete" class="p-3 w-100">
        <h1 class="mb-3 text-center">
          Formulario de Registro de Preferencias Musicales
        </h1>
        <h6 class="text-danger" id="respondentsCount"></h6>

        <h2 class="mb-2">Información Personal</h2>
        <div class="mb-3 d-flex">
          <div class="w-50">
            Edad
            <input type="number" name="age" id="age" class="form-control" />
          </div>
          <div class="w-50 ms-3">
            Género
            <select name="gender" id="gender" class="form-select">
              <option selected disabled>Elige una opcion</option>
              <option value="1">Femenino</option>
              <option value="2">Masculino</option>
              <option value="3">No binario</option>
              <option value="4">Otro</option>
            </select>
          </div>
        </div>
        <div class="mb-3">
          Nivel de Estudio
          <select id="levelStudy" class="form-select">
            <option selected disabled>Elige una opcion</option>
            <option value="1">Primario</option>
            <option value="2">Secundario</option>
            <option value="3">Terciario</option>
            <option value="4">Terciario Incompleto</option>
            <option value="5">Universitario</option>
            <option value="6">Universitario Incompleto</option>
          </select>
        </div>
        <div class="mb-3">
          Localidad
          <select id="localities" class="form-select"></select>
        </div>
        <h2 class="mb-2">Preferencias Musicales</h2>
        <div class="mb-3">
          Te gusta la música
          <select
            name="gustaMusica"
            id="gustaMusica"
            class="form-select"
          ></select>
        </div>
        <div class="mb-3">
          ¿Consideras la música imprescindible en tu vida?
          <select
            name="imprescindibleMusica"
            id="imprescindibleMusica"
            class="form-select"
          ></select>
        </div>
        <div class="mb-3">
          Género musical favorito
          <select
            name="generoMusical"
            id="generoMusical"
            class="form-select"
          ></select>
        </div>
        <div class="mb-3">
          Artista o grupo favorito
          <input
            type="text"
            name="artistaFavorito"
            id="artistaFavorito"
            class="form-control"
          />
          <input
            type="hidden"
            name="artistaFavoritoId"
            id="artistaFavoritoId"
          />
          <input
            type="hidden"
            name="cancionFavoritaId"
            id="cancionFavoritaId"
          />
          <input
            type="hidden"
            name="comentariosAdicionalesId"
            id="comentariosAdicionalesId"
          />
        </div>
        <div class="mb-3">
          Canción favorita
          <input
            type="text"
            name="cancionFavorita"
            id="cancionFavorita"
            class="form-control"
          />
        </div>
        <div class="mb-3">
          ¿Le das importancia a la letra o a la melodía de la canción?
          <select
            name="importanciaCancion"
            id="importanciaCancion"
            class="form-select"
          ></select>
        </div>
        <div class="mb-3">
          ¿Tus gustos musicales son cambiantes de acuerdo a los cambios
          emocionales internos?
          <select
            name="gustosCambiantes"
            id="gustosCambiantes"
            class="form-select"
          ></select>
        </div>

        <h2 class="mb-2">Momentos del Día</h2>
        <div class="mb-3">
          ¿Cuánto tiempo escuchas música durante el día?
          <select
            name="tiempoMusicaDia"
            id="tiempoMusicaDia"
            class="form-select"
          ></select>
        </div>
        <div class="mb-3">
          ¿Cuál es tu momento favorito para escuchar música?
          <select
            name="momentoFavorito"
            id="momentoFavorito"
            class="form-select"
          ></select>
        </div>

        <h2 class="mb-2">Comentarios Adicionales</h2>
        <div class="mb-3">
          ¿Qué género de música no te gusta?
          <select
            name="generoNoGusta"
            id="generoNoGusta"
            class="form-select"
          ></select>
        </div>
        <div class="mb-3">
          ¿Hay algo más que te gustaría compartir sobre tus preferencias
          musicales?
          <input
            type="text"
            name="comentariosAdicionales"
            id="comentariosAdicionales"
            class="form-control"
          />
        </div>
        <div class="d-flex justify-content-end">
          <input
            id="btnSubmit"
            type="submit"
            value="Enviar"
            class="btn btn-primary mt-3"
          />
        </div>
      </form>
    </main>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
      crossorigin="anonymous"
    ></script>
    <script>
      const formComplete = document.querySelector("#formComplete");
      const localities = document.querySelector("#localities");
      const levelStudy = document.querySelector("#levelStudy");
      const gustaMusica = document.querySelector("#gustaMusica");
      const generoMusical = document.querySelector("#generoMusical");
      const generoNoGusta = document.querySelector("#generoNoGusta");
      const imprescindibleMusica = document.querySelector(
        "#imprescindibleMusica"
      );
      const importanciaCancion = document.querySelector("#importanciaCancion");
      const gustosCambiantes = document.querySelector("#gustosCambiantes");
      const tiempoMusicaDia = document.querySelector("#tiempoMusicaDia");
      const momentoFavorito = document.querySelector("#momentoFavorito");

      const artistaFavoritoId = document.querySelector("#artistaFavoritoId");
      const cancionFavoritaId = document.querySelector("#cancionFavoritaId");
      const btnSubmit = document.querySelector("#btnSubmit");
      const comentariosAdicionalesId = document.querySelector(
        "#comentariosAdicionalesId"
      );
        const respCount = document.querySelector("#respondentsCount");

      document.addEventListener("DOMContentLoaded", async () => {
        const locs = await getLocalities();
        const data = await getQuestionOptions();

        const respo = await respondentCount();

        respCount.innerHTML = `Personas encuestadas: ${respo.respondentsCount}`


        selects(data[0].Options, gustaMusica);
        selects(data[1].Options, imprescindibleMusica);
        selects(data[2].Options, generoMusical);
        selects(data[2].Options, generoNoGusta);
        selects(data[5].Options, importanciaCancion);
        selects(data[6].Options, gustosCambiantes);
        selects(data[7].Options, tiempoMusicaDia);
        selects(data[8].Options, momentoFavorito);
        artistaFavoritoId.value = data[3].id;
        cancionFavoritaId.value = data[4].id;
        comentariosAdicionalesId.value = data[10].id;

        console.log(data);

        showSelectLocalities(locs);
      });

      formComplete.addEventListener("submit", async (e) => {
        e.preventDefault();

        btnSubmit.disabled = true;

        const urlStore = "/api/surveys/store";

        const formdata = new FormData(formComplete);

        const datos = {
          age: formdata.get("age"),
          gender: formdata.get("gender"),
          localities: localities.value,
          levelStudy: levelStudy.value,
          gustaMusica: gustaMusica.value,
          generoMusical: generoMusical.value,
          imprescindibleMusica: imprescindibleMusica.value,
          importanciaCancion: importanciaCancion.value,
          gustosCambiantes: gustosCambiantes.value,
          tiempoMusicaDia: tiempoMusicaDia.value,
          momentoFavorito: momentoFavorito.value,
          generoNoGusta: generoNoGusta.value,
          artistaFavorito: {
            value: formdata.get("artistaFavorito"),
            idQuestion: artistaFavoritoId.value,
          },
          cancionFavorita: {
            value: formdata.get("cancionFavorita"),
            idQuestion: cancionFavoritaId.value,
          },
          comentariosAdicionales: {
            value: formdata.get("comentariosAdicionales"),
            idQuestion: comentariosAdicionalesId.value,
          },
        };

        try {
          const response = await fetch(urlStore, {
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(datos),
            method: "POST",
          });

          if (!response.ok) {
            console.log(response);
            throw {
              errors: "Error inesperado.",
            };
          }
          const data = await response.json();
          if (data.status === 201) {
            btnSubmit.disabled = false;

            alert("Encuesta registrada correctamente, ¡MUCHAS GRACIAS!");
            window.location.reload();
          }
        } catch (error) {
          btnSubmit.disabled = false;
          console.log(error);
        }
      });

      const respondentCount = async () => {
        const urlRespondentCount = "/api/respondentCount";

        try {
          const response = await fetch(urlRespondentCount);
          if (!response.ok) {
            console.log(response);
            throw {
              errors: "Error inesperado.",
            };
          }
          const data = await response.json();
          return data;
        } catch (error) {
          console.log(error);
        }
      };

      const getQuestionOptions = async () => {
        const urlQuestionsOptions = "/api/surveys/1/questions";
        try {
          const response = await fetch(urlQuestionsOptions);
          if (!response.ok) {
            console.log(response);
            throw {
              errors: "Error inesperado.",
            };
          }
          const data = await response.json();
          return data;
        } catch (error) {
          console.log(error);
        }
      };

      const getLocalities = async () => {
        const urlLocalities = "/api/localities";
        try {
          const response = await fetch(urlLocalities);
          if (!response.ok) {
            console.log(response);
            throw {
              errors: "Error inesperado.",
            };
          }
          const data = await response.json();
          return data;
        } catch (error) {
          console.log(error);
        }
      };

      const showSelectLocalities = (locs) => {
        localities.innerHTML = "<option selected>Elige una opcion</option>";

        locs.forEach((loc) => {
          localities.innerHTML += `<option value="${loc.id}">${loc.name}</option>`;
        });
      };

      const selects = (options, select) => {
        select.innerHTML =
          "<option selected disabled>Elige una opcion</option>";

        options.forEach((op) => {
          select.innerHTML += `<option value="${op.id}">${op.option}</option>`;
        });
      };
    </script>
  </body>
</html>
